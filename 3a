
#include <iostream>
#include <stdlib.h>
#include <stdint.h>
#include <fstream>
#include <sstream>
#include <cstdio>
#include <cstring>
#include <cstdlib>

using namespace std;

string Netmaskconversion(string netmask)
{
	int temp = atoi(netmask.c_str());
	uint32_t b = 0xFFFFFFFF << (32 - temp);
	ostringstream m;
	m << (b >> 24) << '.' << (b >> 16 & 0xFF) << '.' << (b >> 8 & 0xFF) << '.' << (b & 0xFF);
	return m.str();
}

unsigned long IPconversion(string ip)
{
	int b1, b2, b3, b4;
	unsigned long addresse = 0;

	if (sscanf(ip.c_str(), "%d.%d.%d.%d", &b1, &b2, &b3, &b4) != 4)
		return 0;

    addresse  = b1 << 24;
	addresse |= b2 << 16;
	addresse |= b3 << 8;
	addresse |= b4;
	return addresse ;
}



bool isInRange(const string ip, const string net, const string netmask)
{
	string mask1 = Netmaskconversion(netmask);
	unsigned long ip_adresse = IPconversion(ip);
	unsigned long net_adresse = IPconversion(net);
	unsigned long netmask_adresse = IPconversion(mask1);
	unsigned long net_lower = (net_adresse & netmask_adresse);
	unsigned long net_upper = (net_lower | (~netmask_adresse));

	if (ip_adresse >= net_lower && ip_adresse <= net_upper)
		return true;

	return false;
}



int main(int argc, char* argv[]) {
    
    
        int count;

	string g;
	
    if (argc > 1)
    {
        for(int count = 1;count < argc; count++)

        if (strcmp(argv[1], "./program") == 0)
        cout<<'\0';
        else if  (argv[1]!= "./program") { cout << "Error: Missing argument ./program" << endl; return 0;} 

        if (strcmp(argv[2], "--database") == 0)
        cout<<'\0';
        else if  (argv[2]!= "--database") { cout << "Error: Missing argument --database" << endl; return 0;} 

        if (strcmp(argv[3], "./database.txt") == 0)
        cout<<'\0';
        else if  (argv[3]!= "./database.txt") { cout << "Error: Missing argument ./database.txt" << endl; return 0;} 

        if (argv[4] == NULL) { cout << "Error: Missing argument ip address!" << endl; return 0;}

    }

	string ip = argv[4];

	ifstream file(argv[3]);
	if (!file) { cout << "Error: File doesn't exist!" << endl; return 0; }

	while (getline(file,g))
	{
		string net = g.substr(0,g.find("/"));
		string netmask = g.substr(g.find("/")+1,g.size());
		if (isInRange(ip, net , netmask))
			cout << g << endl; 
	}


	return 0;
}
